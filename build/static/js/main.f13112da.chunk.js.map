{"version":3,"sources":["components/img/comment.svg","components/img/retweet.svg","components/img/heart.svg","components/img/download.svg","components/img/correct.svg","components/post.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Post","props","className","src","photo","alt","href","name","correct","image","nickname","date","contentDate","a","contentUser","content","comment","retweet","likes","download","NASA_IMAGE","postList","App","map","post","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,+OC6D5BC,EArDF,SAACC,GACZ,OACE,yBAAKC,UAAU,SACb,6BAASA,UAAU,WACjB,8BACE,yBAAKC,IAAKF,EAAMG,MAAOC,IAAKJ,EAAMG,MAAOF,UAAU,UAErD,yBAAKA,UAAU,cACb,yBAAKA,UAAU,oBACb,uBACEI,KAAK,2BACLJ,UAAU,yBAETD,EAAMM,MAET,yBAAKJ,IAAKK,IAASH,IAAKJ,EAAMQ,MAAOP,UAAU,mBAC9CD,EAAMS,SART,IAQoBT,EAAMU,MAE1B,uBAAGT,UAAU,sBACVD,EAAMW,YACP,uBAAGC,GAAC,EAACP,KAAML,EAAMa,YAAaZ,UAAU,4BACrCD,EAAMa,aAERb,EAAMc,SAET,yBACEZ,IAAKF,EAAMQ,MACXJ,IAAKJ,EAAMQ,MACXP,UAAU,qBAEZ,yBAAKA,UAAU,qBACb,4BAAQA,UAAU,4BAChB,yBAAKC,IAAKa,IAASX,IAAI,YACvB,0BAAMH,UAAU,2BAA2BD,EAAMe,UAEnD,4BAAQd,UAAU,4BAChB,yBAAKC,IAAKc,IAASZ,IAAI,YACvB,0BAAMH,UAAU,2BAA2BD,EAAMgB,UAEnD,4BAAQf,UAAU,4BAChB,yBAAKC,IAAKe,IAAOb,IAAI,UACrB,0BAAMH,UAAU,2BAA2BD,EAAMiB,QAEnD,4BAAQhB,UAAU,4BAChB,yBAAKC,IAAKgB,IAAUd,IAAI,mBCjDhCe,EACJ,gFAWIC,EAAW,CACf,CACEd,KAAM,OACNH,MAAOgB,EACPV,SAAU,QACVE,YAAa,GACbE,YAAa,GACbC,QACE,qGACFN,MAXF,oEAYEE,KAAM,aACNK,QAAS,IACTC,QAAS,yBACTC,MAAO,2BAET,CACEX,KAAM,OACNH,MAAOgB,EACPV,SAAU,QACVE,YAAa,kCACbE,YAAa,WACbC,QACE,+PACFN,MA5BF,oEA6BEE,KAAM,aACNK,QAAS,IACTC,QAAS,yBACTC,MAAO,2BAET,CACEX,KAAM,OACNH,MAAOgB,EACPV,SAAU,QACVE,YAAa,kCACbE,YAAa,cACbC,QACE,4JACFN,MA7CF,oEA8CEE,KAAM,8BACNK,QAAS,GACTC,QAAS,IACTC,MAAO,4BAcII,MAVf,WACE,OACE,6BACGD,EAASE,KAAI,SAACC,GAAD,OACZ,kBAAC,EAASA,QCpDEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f13112da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/comment.880ac01e.svg\";","module.exports = __webpack_public_path__ + \"static/media/retweet.8392a35d.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.c7e469f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/download.76a9b341.svg\";","module.exports = __webpack_public_path__ + \"static/media/correct.c27a63e2.svg\";","import React from \"react\";\r\nimport \"./style.css\";\r\nimport comment from \"./img/comment.svg\";\r\nimport retweet from \"./img/retweet.svg\";\r\nimport likes from \"./img/heart.svg\";\r\nimport download from \"./img/download.svg\";\r\nimport correct from \"./img/correct.svg\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className=\"inner\">\r\n      <section className=\"section\">\r\n        <span>\r\n          <img src={props.photo} alt={props.photo} className=\"logo\" />\r\n        </span>\r\n        <div className=\"inner__box\">\r\n          <div className=\"inner__box-title\">\r\n            <a\r\n              href=\"https://twitter.com/NASA\"\r\n              className=\"inner__box-title-link\"\r\n            >\r\n              {props.name}\r\n            </a>\r\n            <img src={correct} alt={props.image} className=\"verified-image\" />\r\n            {props.nickname} {props.date}\r\n          </div>\r\n          <p className=\"inner__box-content\">\r\n            {props.contentDate}\r\n            <a a href={props.contentUser} className=\"inner__box-content--user\">\r\n              {props.contentUser}\r\n            </a>\r\n            {props.content}\r\n          </p>\r\n          <img\r\n            src={props.image}\r\n            alt={props.image}\r\n            className=\"inner__box-image\"\r\n          />\r\n          <div className=\"inner__box-footer\">\r\n            <button className=\"inner__box-footer-button\">\r\n              <img src={comment} alt=\"comment\" />\r\n              <span className=\"inner__box-footer-count\">{props.comment}</span>\r\n            </button>\r\n            <button className=\"inner__box-footer-button\">\r\n              <img src={retweet} alt=\"retweet\" />\r\n              <span className=\"inner__box-footer-count\">{props.retweet}</span>\r\n            </button>\r\n            <button className=\"inner__box-footer-button\">\r\n              <img src={likes} alt=\"likes\" />\r\n              <span className=\"inner__box-footer-count\">{props.likes}</span>\r\n            </button>\r\n            <button className=\"inner__box-footer-button\">\r\n              <img src={download} alt=\"download\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\nimport Post from \"./components/post\";\n\nconst NASA_IMAGE =\n  \"https://pbs.twimg.com/profile_images/1091070803184177153/TI2qItoi_400x400.jpg\";\n\nconst PLANETS_IMAGE =\n  \"https://pbs.twimg.com/media/EhGouVoWoAEk1sZ?format=jpg&name=small\";\n\nconst MOON_IMAGE =\n  \"https://pbs.twimg.com/media/EhQESMZX0AADdFH?format=jpg&name=small\";\n\nconst SPACE_IMAGE =\n  \"https://pbs.twimg.com/media/EhRONzoXcAEvuPf?format=jpg&name=small\";\n\nconst postList = [\n  {\n    name: \"NASA\",\n    photo: NASA_IMAGE,\n    nickname: \"@NASA\",\n    contentDate: \"\",\n    contentUser: \"\",\n    content:\n      \"Galaxy NGC 2188 is a barred spiral, but only its very narrow outer edge is visible to us on Earth.\",\n    image: SPACE_IMAGE,\n    date: \"14 ч.\",\n    comment: 120,\n    retweet: \"1,5 тыс\",\n    likes: \"9,7 тыс.\",\n  },\n  {\n    name: \"NASA\",\n    photo: NASA_IMAGE,\n    nickname: \"@NASA\",\n    contentDate: \"On Thurs., Sept. 10 at 12pm ET,\",\n    contentUser: \"@NASAJPL\",\n    content:\n      \"Our Moon is rusting. Using data from a @NASAJPL instrument aboard @ISRO's Chandrayaan-1 orbiter, scientists were surprised to find evidence of a form of iron oxide, or rust, produced when iron is exposed to oxygen and water: https://go.nasa.gov/331EdP3\",\n    image: MOON_IMAGE,\n    date: \"19 ч.\",\n    comment: 220,\n    retweet: \"1,8 тыс\",\n    likes: \"9,3 тыс.\",\n  },\n  {\n    name: \"NASA\",\n    photo: NASA_IMAGE,\n    nickname: \"@NASA\",\n    contentDate: \"On Thurs., Sept. 10 at 12pm ET,\",\n    contentUser: \"@Dr_ThomasZ\",\n    content:\n      \"and his leadership team will present updates on our science program during a public town hall meeting. How to join virtually: https://go.nasa.gov/32Tpohq\",\n    image: PLANETS_IMAGE,\n    date: \"4 сент.\",\n    comment: 62,\n    retweet: 935,\n    likes: \"6,7 тыс.\",\n  },\n];\n\nfunction App() {\n  return (\n    <div>\n      {postList.map((post) => (\n        <Post {...post} />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}